openapi: 3.0.0
info:
  title: Customer API
  description: API for managing customers
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /customer:
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerDTO'
      responses:
        '200':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
  /customer/{id}:
    get:
      summary: Get customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '404':
          description: Customer not found
  /customer/name/{customerName}:
    get:
      summary: Get customer by name
      parameters:
        - name: customerName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '404':
          description: Customer not found
  /customer/contacts/{id}:
    get:
      summary: Get customer contacts by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerContactDTO'
        '404':
          description: Customer not found
  /customer/documents/{id}:
    get:
      summary: Get customer documents by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDocumentDTO'
        '404':
          description: Customer not found
  /customer/contact:
    post:
      summary: Add contact to customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactOrDocumentDTO'
      responses:
        '200':
          description: Contact added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactDTO'
  /customer/document:
    post:
      summary: Add document to customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactOrDocumentDTO'
      responses:
        '200':
          description: Document added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDocumentDTO'
components:
  schemas:
    CreateCustomerDTO:
      type: object
      properties:
        name:
          type: string
        segmentName:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerContactDTO'
        cpf:
          type: string
    CustomerDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        segmentName:
          type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDocumentDTO'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerContactDTO'
    CustomerContactDTO:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    CustomerDocumentDTO:
      type: object
      properties:
        documentNumber:
          type: string
        documentType:
          type: string
    AddContactOrDocumentDTO:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
        customerId:
          type: integer